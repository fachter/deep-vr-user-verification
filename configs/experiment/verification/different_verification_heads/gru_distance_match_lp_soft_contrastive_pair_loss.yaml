# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /model: rnn_model.yaml
  - override /datamodule: embedding_datamodule.yaml
  - override /lightning_module: verification_embedding_module.yaml
  - override /callbacks: embedding.yaml
  - override /monitored_metrics: embedding.yaml
  - override /trainer: gpu.yaml
  - override /logger: wandb.yaml

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

run_group: debug

tags: ["embedding", "gru"]

seed: 12345

trainer:
  min_epochs: 100
  max_epochs: 2000
  check_val_every_n_epoch: 10

#model:
#  optimizer:
#    lr: 0.002
#  net:
#    lin1_size: 128
#    lin2_size: 256
#    lin3_size: 64

datamodule:
  data_split:
    data_folder: ../data/bra_50_fps-600_users
    train: 30
    validation: 15
    test: 20
    seed: 12345
    checksum: 46da4b7f742777eaa02a943b5b43316c04cb15fb04dabf4735ec01fadb99d019
  batch_size: 100
  common_dataset_kwargs:
    window_size: 1500
    max_files_to_load_at_once: 100
    coordinate_system:
      forward: "x"
      right: "z"
      up: "y"
  train_dataset_kwargs:
    take_every_nth_sample: 12000
  validation_dataset_kwargs:
    take_every_nth_sample: 3000

lightning_module:
  optimizer_options:
    lr: 0.00002115735684121537
  loss_options:
    name: "SoftContrastivePairLoss"
    custom_loss: True
  verification_head:
    _target_: "src.models.verification_heads.DistanceMatchProbabilityVerificationHead"
    distance:
      _target_: "pytorch_metric_learning.distances.LpDistance"
      normalize_embeddings: False

model:
  num_out_classes: 192
  cell_type: "GRU"
  num_rnn_layers: 3
  rnn_hidden_size: 450
  dropout: 0.28468551172548395



logger:
  wandb:
    tags: ${tags}
    group: ${group}
  aim:
    experiment: "verification"
